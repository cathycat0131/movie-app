{"ast":null,"code":"var _jsxFileName = \"/Users/cathychen/movie-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './bootstrap.min.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport MovieList from './components/MovieList';\nimport { Heading } from './components/Unused/Heading';\nimport MovieListHeading from './components/MovieListHeading';\nimport SearchBox from './components/SearchBox';\nimport AddFavourite from './components/AddFavourite';\nimport AddWatchlist from './components/AddWatchlist';\nimport AddWatched from './components/AddWatched';\nimport RemoveWatched from './components/RemoveWatched';\nimport RemoveWatchlist from './components/RemoveWatchlist';\nimport RemoveFavourite from './components/RemoveFavourite';\nimport { Watchlist } from './components/Unused/Watchlist';\nimport Add from './components/Unused/Add';\nimport { Watched } from './components/Unused/Watched'; // import { Link } from 'react-router-dom';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [favourites, setFavourites] = useState([]);\n  const [watched, setWatched] = useState([]);\n  const [watchlist, setWatchlist] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n\n  const getMovieRequest = async searchValue => {\n    const url = `http://www.omdbapi.com/?s=${searchValue}&apikey=b7bc2d0c`;\n    const response = await fetch(url);\n    const responseJson = await response.json();\n\n    if (responseJson.Search) {\n      setMovies(responseJson.Search);\n    }\n  }; //Search movie\n\n\n  useEffect(() => {\n    getMovieRequest(searchValue);\n  }, [searchValue]); //Fetch data from local storage\n\n  useEffect(() => {\n    const movieFavourite = JSON.parse(localStorage.getItem('react-movie-favourite'));\n    const movieWatchlist = JSON.parse(localStorage.getItem('react-movie-watchlist'));\n    const movieWatched = JSON.parse(localStorage.getItem('react-movie-watched'));\n\n    if (movieWatched) {\n      setWatched(movieWatched);\n    }\n\n    if (movieFavourite) {\n      setFavourites(movieFavourite);\n    }\n\n    if (movieWatchlist) {\n      setWatchlist(movieWatchlist);\n    }\n  }, []); //Save to local storage\n\n  const saveToLocalStorageFavourite = items => {\n    localStorage.setItem('react-movie-favourite', JSON.stringify(items));\n  };\n\n  const saveToLocalStorageWatchlist = items => {\n    localStorage.setItem('react-movie-watchlist', JSON.stringify(items));\n  };\n\n  const saveToLocalStorageWatched = items => {\n    localStorage.setItem('react-movie-watched', JSON.stringify(items));\n  }; //Add to Favourite, Watchlist, Watched\n\n\n  const addFavouriteMovie = movie => {\n    const newFavouriteList = [...favourites, movie];\n    setFavourites(newFavouriteList);\n    saveToLocalStorageFavourite(newFavouriteList);\n  };\n\n  const addToWatchlist = movie => {\n    const newWatchlist = [...watchlist, movie];\n    setWatchlist(newWatchlist);\n    saveToLocalStorageWatchlist(newWatchlist);\n  };\n\n  const removeFromWatchlist = movie => {\n    //Remove from watchlist\n    const newWatchlist = watchlist.filter(watchlist => watchlist.imdbID !== movie.imdbID);\n    setWatchlist(newWatchlist);\n    saveToLocalStorageWatchlist(newWatchlist);\n  };\n\n  const addToWatched = movie => {\n    //Remove from watchlist\n    const newWatchlist = watchlist.filter(watchlist => watchlist.imdbID !== movie.imdbID);\n    setWatchlist(newWatchlist);\n    saveToLocalStorageWatchlist(newWatchlist); //Add to watched\n\n    const newWatched = [...watched, movie];\n    setWatched(newWatched);\n    saveToLocalStorageWatched(newWatched);\n  };\n\n  const removeFromWatched = movie => {\n    const newWatched = watched.filter(watched => watched.imdbID !== movie.imdbID);\n    setWatched(newWatched);\n    saveToLocalStorageWatched(newWatched);\n  };\n\n  const removeFavouriteMovie = movie => {\n    const newFavouriteList = favourites.filter(favourite => favourite.imdbID !== movie.imdbID);\n    setFavourites(newFavouriteList);\n    saveToLocalStorageFavourite(newFavouriteList);\n  }; //Render\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/about\",\n              children: \"About\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/topics\",\n              children: \"Topics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: AddFavourite\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          component: AddWatchlist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/topics\",\n          component: AddWatched\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), \";\"]\n  }, void 0, true);\n};\n\n_s(App, \"uIcLjx0qXHjuqWEdmoErMOF6s+o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/cathychen/movie-app/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Link","MovieList","Heading","MovieListHeading","SearchBox","AddFavourite","AddWatchlist","AddWatched","RemoveWatched","RemoveWatchlist","RemoveFavourite","Watchlist","Add","Watched","App","movies","setMovies","favourites","setFavourites","watched","setWatched","watchlist","setWatchlist","searchValue","setSearchValue","getMovieRequest","url","response","fetch","responseJson","json","Search","movieFavourite","JSON","parse","localStorage","getItem","movieWatchlist","movieWatched","saveToLocalStorageFavourite","items","setItem","stringify","saveToLocalStorageWatchlist","saveToLocalStorageWatched","addFavouriteMovie","movie","newFavouriteList","addToWatchlist","newWatchlist","removeFromWatchlist","filter","imdbID","addToWatched","newWatched","removeFromWatched","removeFavouriteMovie","favourite"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './bootstrap.min.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport MovieList from './components/MovieList';\nimport {Heading} from './components/Unused/Heading';\nimport MovieListHeading from './components/MovieListHeading';\nimport SearchBox from './components/SearchBox';\nimport AddFavourite from './components/AddFavourite';\nimport AddWatchlist from './components/AddWatchlist';\nimport AddWatched from './components/AddWatched';\nimport RemoveWatched from './components/RemoveWatched';\nimport RemoveWatchlist from './components/RemoveWatchlist';\nimport RemoveFavourite from './components/RemoveFavourite';\nimport {Watchlist} from './components/Unused/Watchlist';\nimport Add from './components/Unused/Add';\nimport {Watched} from './components/Unused/Watched';\n// import { Link } from 'react-router-dom';\n\nconst App = () => {\n    const [movies, setMovies] = useState([]);\n    const [favourites,setFavourites] = useState([]);\n    const [watched, setWatched] = useState([])\n    const [watchlist,setWatchlist] = useState([]);\n    const [searchValue,setSearchValue] = useState('');\n    const getMovieRequest = async (searchValue) =>{\n      const url = `http://www.omdbapi.com/?s=${searchValue}&apikey=b7bc2d0c`;\n      const response = await fetch(url);\n      const responseJson = await response.json();\n      if(responseJson.Search){\n        setMovies(responseJson.Search);\n      }\n      \n    };\n\n    //Search movie\n    useEffect(()=>{\n      getMovieRequest(searchValue);\n    },[searchValue]);\n  \n    //Fetch data from local storage\n    useEffect(()=>{\n    const movieFavourite = JSON.parse(\n      localStorage.getItem('react-movie-favourite')\n    );\n    const movieWatchlist= JSON.parse(\n      localStorage.getItem('react-movie-watchlist')\n    );\n    const movieWatched= JSON.parse(\n      localStorage.getItem('react-movie-watched')\n    );\n    if (movieWatched) {\n      setWatched(movieWatched);\n\t\t}\n    if (movieFavourite) {\n\t\t\tsetFavourites(movieFavourite);\n\t\t}\n    if (movieWatchlist) {\n      setWatchlist(movieWatchlist)\n\t\t}\n  },[]);\n\n  //Save to local storage\n  const saveToLocalStorageFavourite = (items) =>{\n    localStorage.setItem('react-movie-favourite',\n    JSON.stringify(items));\n  }\n\n  const saveToLocalStorageWatchlist= (items) =>{\n    localStorage.setItem('react-movie-watchlist',\n    JSON.stringify(items));\n  }\n\n  const saveToLocalStorageWatched = (items) =>{\n    localStorage.setItem('react-movie-watched',\n    JSON.stringify(items));\n  }\n\n  //Add to Favourite, Watchlist, Watched\n  const addFavouriteMovie = (movie) =>{\n    const newFavouriteList = [...favourites,movie];\n    setFavourites(newFavouriteList);\n    saveToLocalStorageFavourite(newFavouriteList);\n  };\n\n  const addToWatchlist = (movie) =>{\n    const newWatchlist = [...watchlist,movie];\n    setWatchlist(newWatchlist);\n    saveToLocalStorageWatchlist(newWatchlist);\n  }\n\n  const removeFromWatchlist = (movie)=>{\n    //Remove from watchlist\n    const newWatchlist = watchlist.filter(\n      (watchlist) => watchlist.imdbID !== movie.imdbID);\n\n      setWatchlist(newWatchlist);\n      saveToLocalStorageWatchlist(newWatchlist);\n  }\n\n  const addToWatched = (movie) =>{\n    //Remove from watchlist\n    const newWatchlist = watchlist.filter(\n      (watchlist) => watchlist.imdbID !== movie.imdbID);\n\n      setWatchlist(newWatchlist);\n      saveToLocalStorageWatchlist(newWatchlist);\n\n      //Add to watched\n      const newWatched= [...watched,movie];\n      setWatched(newWatched);\n      saveToLocalStorageWatched(newWatched);\n  };\n\n  const removeFromWatched = (movie)=>{\n    const newWatched = watched.filter(\n      (watched) => watched.imdbID !== movie.imdbID)\n      setWatched(newWatched);\n      saveToLocalStorageWatched(newWatched);\n  }\n\n  const removeFavouriteMovie = (movie) =>{\n    const newFavouriteList = favourites.filter(\n      (favourite) => favourite.imdbID !== movie.imdbID);\n\n      setFavourites(newFavouriteList);\n      saveToLocalStorageFavourite(newFavouriteList);\n  };\n\n\n    //Render\n    return ( \n        <>\n        <Router>\n    <div>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/about\">About</Link>\n        </li>\n        <li>\n          <Link to=\"/topics\">Topics</Link>\n        </li>\n      </ul>\n \n      <hr />\n \n      <Route exact path=\"/\" component={AddFavourite} />\n      <Route path=\"/about\" component={AddWatchlist} />\n      <Route path=\"/topics\" component={AddWatched} />\n    </div>\n  </Router>;\n        \n    \n    \n    \n        </>\n    );\n};\nexport default App;"]},"metadata":{},"sourceType":"module"}